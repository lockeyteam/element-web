{"version":3,"file":"bundles/ae0ae3bc04d76eaf7997/6762.js","mappings":"wkBAuBe,MAAMA,UAAoCC,EAAAA,cAA4BC,WAAAA,IAAAC,GAAA,SAAAA,IAAAC,EAAAA,EAAAA,GAAA,4BACnD,KAC1BC,KAAKC,MAAMC,aACXC,EAAAA,EAAIC,KAAKC,EAAAA,EAAOC,sBACnBP,EAAAA,EAAAA,GAAA,qBAEsB,KACnBC,KAAKC,MAAMC,aAEX,MAAMK,EAA4B,CAC9BC,OAAQH,EAAAA,EAAOC,iBACfG,aAAcC,EAAAA,EAAQC,YAE1BR,EAAAA,EAAIS,SAASL,KAChB,CAEMM,MAAAA,GACH,MAAMC,EACFlB,EAAAA,cAAA,QAAMmB,UAAU,mCAAkCC,EAAAA,EAAAA,IAAG,6CAGzD,OACIpB,EAAAA,cAACqB,EAAAA,EAAU,CAACF,UAAU,2BAA2Bb,WAAYF,KAAKC,MAAMC,WAAYY,MAAOA,GACvFlB,EAAAA,cAAA,WACIA,EAAAA,cAAA,UAAIoB,EAAAA,EAAAA,IAAG,qDACPpB,EAAAA,cAAA,UAAIoB,EAAAA,EAAAA,IAAG,qDACPpB,EAAAA,cAAA,UAAQmB,UAAU,YAAWC,EAAAA,EAAAA,IAAG,+CAChCpB,EAAAA,cAACsB,EAAAA,EAAa,CACVC,eAAeH,EAAAA,EAAAA,IAAG,gCAClBI,qBAAsBpB,KAAKqB,aAC3BC,cAAcN,EAAAA,EAAAA,IAAG,yBACjBO,SAAUvB,KAAKwB,uBAKnC,E","sources":["webpack://element-web/./src/async-components/views/dialogs/security/RecoveryMethodRemovedDialog.tsx"],"sourcesContent":["/*\nCopyright 2024 New Vector Ltd.\nCopyright 2020 The Matrix.org Foundation C.I.C.\nCopyright 2019 New Vector Ltd\n\nSPDX-License-Identifier: AGPL-3.0-only OR GPL-3.0-only OR LicenseRef-Element-Commercial\nPlease see LICENSE files in the repository root for full details.\n*/\n\nimport React from \"react\";\n\nimport dis from \"../../../../dispatcher/dispatcher\";\nimport { _t } from \"../../../../languageHandler\";\nimport { Action } from \"../../../../dispatcher/actions\";\nimport { UserTab } from \"../../../../components/views/dialogs/UserTab\";\nimport BaseDialog from \"../../../../components/views/dialogs/BaseDialog\";\nimport DialogButtons from \"../../../../components/views/elements/DialogButtons\";\nimport { type OpenToTabPayload } from \"../../../../dispatcher/payloads/OpenToTabPayload\";\n\ninterface IProps {\n    onFinished(): void;\n}\n\nexport default class RecoveryMethodRemovedDialog extends React.PureComponent<IProps> {\n    private onGoToSettingsClick = (): void => {\n        this.props.onFinished();\n        dis.fire(Action.ViewUserSettings);\n    };\n\n    private onSetupClick = (): void => {\n        this.props.onFinished();\n        // Open the user settings dialog to the encryption tab and start the flow to reset encryption\n        const payload: OpenToTabPayload = {\n            action: Action.ViewUserSettings,\n            initialTabId: UserTab.Encryption,\n        };\n        dis.dispatch(payload);\n    };\n\n    public render(): React.ReactNode {\n        const title = (\n            <span className=\"mx_KeyBackupFailedDialog_title\">{_t(\"encryption|recovery_method_removed|title\")}</span>\n        );\n\n        return (\n            <BaseDialog className=\"mx_KeyBackupFailedDialog\" onFinished={this.props.onFinished} title={title}>\n                <div>\n                    <p>{_t(\"encryption|recovery_method_removed|description_1\")}</p>\n                    <p>{_t(\"encryption|recovery_method_removed|description_2\")}</p>\n                    <strong className=\"warning\">{_t(\"encryption|recovery_method_removed|warning\")}</strong>\n                    <DialogButtons\n                        primaryButton={_t(\"common|setup_secure_messages\")}\n                        onPrimaryButtonClick={this.onSetupClick}\n                        cancelButton={_t(\"common|go_to_settings\")}\n                        onCancel={this.onGoToSettingsClick}\n                    />\n                </div>\n            </BaseDialog>\n        );\n    }\n}\n"],"names":["RecoveryMethodRemovedDialog","React","constructor","args","_defineProperty","this","props","onFinished","dis","fire","Action","ViewUserSettings","payload","action","initialTabId","UserTab","Encryption","dispatch","render","title","className","_t","BaseDialog","DialogButtons","primaryButton","onPrimaryButtonClick","onSetupClick","cancelButton","onCancel","onGoToSettingsClick"],"sourceRoot":""}